{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CharcterGenComponent {\n  constructor() {\n    this.races = ['Human', 'Elf', 'Dwarf', 'Halfling', 'Dragonborn', 'Gnome', 'Half-Elf', 'Half-Orc', 'Tiefling'];\n    this.classes = ['Barbarian', 'Bard', 'Cleric', 'Druid', 'Fighter', 'Monk', 'Paladin', 'Ranger', 'Rogue', 'Sorcerer', 'Warlock', 'Wizard'];\n    this.abilities = ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'];\n    this.character = {\n      race: '',\n      class: '',\n      abilities: {\n        strength: 0,\n        dexterity: 0,\n        constitution: 0,\n        intelligence: 0,\n        wisdom: 0,\n        charisma: 0\n      }\n    };\n  }\n  generateCharacter() {\n    this.character.race = this.races[Math.floor(Math.random() * this.races.length)];\n    this.character.class = this.classes[Math.floor(Math.random() * this.classes.length)];\n    this.character.abilities.strength = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.dexterity = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.constitution = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.intelligence = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.wisdom = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.charisma = Math.floor(Math.random() * 20) + 1;\n  }\n  static #_ = this.ɵfac = function CharcterGenComponent_Factory(t) {\n    return new (t || CharcterGenComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CharcterGenComponent,\n    selectors: [[\"app-charcter-gen\"]],\n    decls: 2,\n    vars: 0,\n    template: function CharcterGenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"charcter-gen works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,oBAAoB;EALjCC;IAME,UAAK,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;IACxG,YAAO,GAAG,CAAC,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC;IACpI,cAAS,GAAG,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,CAAC;IAE3F,cAAS,GAAG;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;QACTC,QAAQ,EAAE,CAAC;QACXC,SAAS,EAAE,CAAC;QACZC,YAAY,EAAE,CAAC;QACfC,YAAY,EAAE,CAAC;QACfC,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE;;KAEb;;EAEDC,iBAAiB;IACf,IAAI,CAACC,SAAS,CAACV,IAAI,GAAG,IAAI,CAACW,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACH,KAAK,CAACI,MAAM,CAAC,CAAC;IAC/E,IAAI,CAACL,SAAS,CAACT,KAAK,GAAG,IAAI,CAACe,OAAO,CAACJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACE,OAAO,CAACD,MAAM,CAAC,CAAC;IACpF,IAAI,CAACL,SAAS,CAACR,SAAS,CAACC,QAAQ,GAAGS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IACtE,IAAI,CAACJ,SAAS,CAACR,SAAS,CAACE,SAAS,GAAGQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IACvE,IAAI,CAACJ,SAAS,CAACR,SAAS,CAACG,YAAY,GAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IAC1E,IAAI,CAACJ,SAAS,CAACR,SAAS,CAACI,YAAY,GAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IAC1E,IAAI,CAACJ,SAAS,CAACR,SAAS,CAACK,MAAM,GAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;IACpE,IAAI,CAACJ,SAAS,CAACR,SAAS,CAACM,QAAQ,GAAGI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;EACxE;EAAC;qBA3BUhB,oBAAoB;EAAA;EAAA;UAApBA,oBAAoB;IAAAmB;IAAAC;IAAAC;IAAAC;MAAA;QCPjCC,yBAAG;QAAAA,mCAAmB;QAAAA,iBAAI","names":["CharcterGenComponent","constructor","race","class","abilities","strength","dexterity","constitution","intelligence","wisdom","charisma","generateCharacter","character","races","Math","floor","random","length","classes","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["F:\\WorkPersonal\\PErsonalSite\\github\\characterCreater\\frontEnd\\src\\app\\components\\charcter-gen\\charcter-gen.component.ts","F:\\WorkPersonal\\PErsonalSite\\github\\characterCreater\\frontEnd\\src\\app\\components\\charcter-gen\\charcter-gen.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-charcter-gen',\n  templateUrl: './charcter-gen.component.html',\n  styleUrls: ['./charcter-gen.component.sass']\n})\nexport class CharcterGenComponent {\n  races = ['Human', 'Elf', 'Dwarf', 'Halfling', 'Dragonborn', 'Gnome', 'Half-Elf', 'Half-Orc', 'Tiefling'];\n  classes = ['Barbarian', 'Bard', 'Cleric', 'Druid', 'Fighter', 'Monk', 'Paladin', 'Ranger', 'Rogue', 'Sorcerer', 'Warlock', 'Wizard'];\n  abilities = ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'];\n\n  character = {\n    race: '',\n    class: '',\n    abilities: {\n      strength: 0,\n      dexterity: 0,\n      constitution: 0,\n      intelligence: 0,\n      wisdom: 0,\n      charisma: 0\n    }\n  }\n\n  generateCharacter() {\n    this.character.race = this.races[Math.floor(Math.random() * this.races.length)];\n    this.character.class = this.classes[Math.floor(Math.random() * this.classes.length)];\n    this.character.abilities.strength = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.dexterity = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.constitution = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.intelligence = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.wisdom = Math.floor(Math.random() * 20) + 1;\n    this.character.abilities.charisma = Math.floor(Math.random() * 20) + 1\n  }\n}\n","<p>charcter-gen works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}